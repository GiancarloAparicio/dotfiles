# Show code to key press
# xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf "%-3s %s\n", $5, $8 }'
super + f
  bspc node -t '~fullscreen'

# ---------------------------------------------
# CUSTOM
# ---------------------------------------------

# Search emoji
ctrl + shift + e
    rofi -modi 'run,drun,emoji:~/.oh-my-zsh/custom/scripts/rofiemoji.sh' -show emoji -theme Arc-Dark

# Google-Chrome
super + g
    ~/.local/bin/bspwm-toggle-visibility "google-chrome" "flatpak run com.google.Chrome"

super + n
    ~/.local/bin/bspwm-toggle-visibility gnote "flatpak run org.gnome.Gnote"

# Terminal emulator
super + a
    ~/.local/bin/bspwm-toggle-visibility  Alacritty 'alacritty -e tmux'

# Gestor de archivos
super + b
    bash ~/.config/bspwm/scripts/search-files.sh

# Only-Office
super + o
    ~/.local/bin/bspwm-toggle-visibility DesktopEditors "flatpak run org.onlyoffice.desktopeditors"

# Obsidian
super + m
    ~/.local/bin/bspwm-toggle-visibility obsidian obsidian

#    bash ~/.oh-my-zsh/custom/scripts/sync_obsidian.sh; /usr/bin/obsidian; bash .scripts/sync.sh; tmux kill-session -t aux

# Telegram
super + t
    ~/.local/bin/bspwm-toggle-visibility TelegramDesktop "flatpak run org.telegram.desktop"

# Navigate between open apps
super + space
    rofi -matching fuzzy -theme Arc-Dark -modi 'window,drun,tabs:~/.config/bspwm/scripts/rofi-chrome.sh,search:~/.oh-my-zsh/custom/scripts/search.py' -show search -sidebar-mode -kb-mode-next Right -kb-mode-previous Left   -kb-move-char-back  Control+Shift+Left   -kb-move-char-forward  Control+Shift+Right


# Screen_shot
Print
    flameshot gui

#ctrl + space
#    bash ~/if_run.sh --not --name "(Vivaldi)"  bash ~/.oh-my-zsh/custom/scripts/search.sh


# ---------------------------------------------
# manage volumen
# ---------------------------------------------

# More volumen
super + KP_Subtract
  amixer -D pulse sset Master 5%-

# Less volumen
super + KP_Add
  amixer -D pulse sset Master 5%+

# Program launcher
super + Return
    rofi -no-config -no-lazy-grab -show drun -modi drun -theme ~/.config/polybar/shapes/scripts/rofi/launcher.rasi
#    rofi -matching regex -theme Arc-Dark -modi 'window,drun,search:~/.oh-my-zsh/custom/scripts/search.sh ' -show drun -sidebar-mode -kb-mode-next Right -kb-mode-previous Left   -kb-move-char-back  Control+Shift+Left   -kb-move-char-forward  Control+Shift+Right

# Restart bspwm and
# Make sxhkd reload its configuration files:
super + Escape
    pkill -usr1 -x sxhkd; notify-send 'sxhkd' 'Rnfig'; bspc wm -r


# ---------------------------------------------
# Cmus
# ---------------------------------------------

super + Home
    bash ~/.config/bspwm/scripts/cmus.sh -s

super + Prior
    bash ~/.config/bspwm/scripts/cmus.sh -n

super + Next
    bash ~/.config/bspwm/scripts/cmus.sh -p

#--------------------------------------------
# bspwm hotkeys
#

# Change layout for current desktop
super + space
    bsp-layout cycle --layouts

# Show help
super + {apostrophe, KP_Divide}
    bash ~/.config/bspwm/scripts/sxhkd_help.sh

# Close and kill
super + {_,shift + }q
	bspc node -{c,k}


# Alternate between the tiled and monocle layout (toggle zoom)
super + z
    bspc desktop -l next
#  bspc node --state \~fullscreen

# send the newest marked node to the newest preselected node
# super + y
# 	bspc node newest.marked.local -n newest.!automatic.local

# Swap the current node and the biggest window
super + shift + o
	bspc node -s biggest.tiled.local


# Swap the current node and the fewest window
super + shift + l
	bspc node -s smallest.tiled.local

#
# state/flags
#

#super + {shift + t,shift + w,shift + s,shift + f}
#	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}
# Toggle the window floating
super + shift + s
  bspc node --state \~floating

#super + {shift + t,shift + s }
#	bspc node -t {tiled,floating}

# Toggle the window titled
super + shift + t
  bspc node --state \~tiled

# Set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# Move current window to a pre-selected space
super + shift + m
    bspc node -n last.!automatic

# Rotate tree
super + shift + {a,d}
    bspc node @/ -C {forward,backward}

#
# focus/swap
#

# Focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}	
    bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
#super + {p,b,comma,period}
#  bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
#super + {_,shift + }c
#	bspc node -f {next,prev}.local.!hidden.window

# Change focus between nodes current desktop
alt + Tab
	bspc node -f prev.local.!hidden.window

# Focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
#super + {grave,Tab}
#	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
#super + {o,i}
#	bspc wm -h off; \
#	bspc node {older,newer} -f; \
#	bspc wm -h on

# Focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

#super + ctrl + {h,j,k,l}
# Preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# Preselect the ratio
super + ctrl +  {1-9}
    bspc node -o 0.{1-9}

# Cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

#super + ctrl + shift + space
# Cancel the preselection for the focused desktop
super + ctrl + alt + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
#super + alt + {h,j,k,l}
#	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
#super + alt + shift + {h,j,k,l}
#	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

#super + {Left,Down,Up,Right}
# Move a floating window
super + ctrl + {Left,Down,Up,Right}
	bspc node -v {-15 0,0 15,0 -15,15 0}


# (move/resize)
#super + s : {Left,Down,Up,Right}
super + s : + {Left,Down,Up,Right}
    STEP=20; SELECTION={1,2,3,4}; \
    bspc node -z $(echo "left -$STEP 0,top 0 $STEP,top 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION) || \
    bspc node -z $(echo "right -$STEP 0,bottom 0 $STEP,bottom 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION)

# Elige entre varios comandos a realizar
@Scroll_Lock
    rofi -matching fuzzy -theme Arc-Dark -modi 'search:~/.local/bin/multi.py ' -show search -sidebar-mode

# Repite el ultimo comando seleccionado
@Pause
    ~/.local/bin/multi.py "restore"

# Close screen
#super + shift + c
#    sleep 0.5; xset dpms force standby

# Lock screen
#super + shift + x
#    betterlockscreen -l dim -t ''

#---------------------------------------------------------------------------------------------------
# Emulate keys chromeOS

# Emulate home/end keys
ctrl + alt + @{Up,Down}
    xte 'keyup Control_L' 'keyup Alt_L' 'key {Home,End}'

# Emulate home/end keys with shift
ctrl + alt + shift + @{Up,Down}
    xte 'keyup Control_L' 'keyup Alt_L' 'key {Home,End}'

# Emulate delete key
~alt + BackSpace
    xte 'keyup Alt_L' 'key Delete' 'keydown Alt_L'


# Emulate mayus with alt + search
#Caps_Lock + alt
#    xte 'key Caps_Lock'

#Emulate key search
Caps_Lock
    rofi -matching fuzzy -theme Arc-Dark -modi 'window,drun,tabs:~/.config/bspwm/scripts/rofi-chrome.sh,search:~/.oh-my-zsh/custom/scripts/search.py' -show search -sidebar-mode -kb-mode-next Right -kb-mode-previous Left   -kb-move-char-back  Control+Shift+Left   -kb-move-char-forward  Control+Shift+Right
